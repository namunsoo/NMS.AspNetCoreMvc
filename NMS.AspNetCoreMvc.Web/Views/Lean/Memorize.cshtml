@{
    ViewData["Title"] = "Memorize Page";
}

<script src="~/lib/Etc/xlsx.core.min.js"></script>
@section Scripts {
    <script type="text/javascript">
        var countProgress, workbook, exceljson, question, answer, count;
        $(document).ready(function () {

            countProgress = $("#countProgress").kendoProgressBar({
                type: "value",
                max: 0,
                labelId: "countProgressLable",
                ariaRole: true,
                animation: false
            }).data("kendoProgressBar");

            question = $("#question").kendoTextArea({
                readonly: true
            }).data('kendoTextArea');

            answer = $('#answer').kendoExpansionPanel({
                title: '정답',
                subTitle: '확인하기',
                collapse: OnCollapse,
                expand: OnExpand
            }).data('kendoExpansionPanel');
        });

        $("#files").on("change", function (e) {
            let files = e.target.files; //input file 객체를 가져온다.
            let i, f;
            let xlsxflag = false; /*Flag for checking whether excel is .xls format or .xlsx format*/
            if ($("#files").val().toLowerCase().indexOf(".xlsx") > 0 || $("#files").val().toLowerCase().indexOf(".xls") > 0) {
                xlsxflag = $("#files").val().toLowerCase().indexOf(".xlsx") > 0;
                for (i = 0; i != files.length; ++i) {
                    f = files[i];
                    let reader = new FileReader(); //FileReader를 생성한다.

                    //성공적으로 읽기 동작이 완료된 경우 실행되는 이벤트 핸들러를 설정한다.
                    reader.onload = function (e) {
                        let data = e.target.result;
                        /*Converts the excel data in to object*/
                        if (xlsxflag) {
                            workbook = XLSX.read(data, { type: 'binary' });
                        }
                        else {
                            workbook = XLS.read(data, { type: 'binary' });
                        }
                        /*Gets all the sheetnames of excel in to a variable*/
                        let sheet_name_list = workbook.SheetNames;

                        // var cnt = 0; /*This is used for restricting the script to consider only first sheet of excel*/
                        sheet_name_list.forEach(function (y) { /*Iterate through all sheets*/
                            /*Convert the cell value to Json*/
                            if (xlsxflag) {
                                exceljson = XLSX.utils.sheet_to_json(workbook.Sheets[y], { header: ["question", "answer"] });
                            }
                            else {
                                exceljson = XLS.utils.sheet_to_row_object_array(workbook.Sheets[y], { header: ["question", "answer"] });
                            }

                            if (exceljson.length > 0) {
                                count = 0;
                                countProgress.options.max = exceljson.length;
                                countProgress.value(0);
                                question.value(exceljson[0]['question']);
                                $('#answerText').text(exceljson[0]['answer']);
                                // alert(exceljson);
                            }
                        });
                    };

                    //파일객체를 읽는다. 완료되면 원시 이진 데이터가 문자열로 포함됨.
                    reader.readAsBinaryString(f);

                }//end. for
            } else {
                alert('엑셀 파일만 가능합니다.');
            }

        });

        function GoBefore() {
            if (typeof count == "number" && count >= 1) {
                count -= 1;
                $('#answerText').css('display', 'none');
                answer.toggle(false);
                countProgress.value(count);
                question.value(exceljson[count]['question']);
                $('#answerText').text(exceljson[count]['answer']);
            }
        }
        function GoNext() {
            if (typeof count == "number" && count+1 < exceljson.length) {
                count += 1;
                $('#answerText').css('display', 'none');
                answer.toggle(false);
                countProgress.value(count);
                question.value(exceljson[count]['question']);
                $('#answerText').text(exceljson[count]['answer']);
            }
        }
        function OnCollapse() {
            $('#answerText').css('display', 'none');
        }
        function OnExpand() {
            $('#answerText').css('display', 'block');
        }
        //# sourceURL=debugScript
    </script>
}

<div>
    <table id="cardInfo">
        <tr>
            <td>
                <div>파일&nbsp;선택</div>
            </td>
            <td>
                <input name="files" id="files" type="file" aria-label="files" />
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <div id="countProgress"></div>
            </td>
        </tr>
    </table>
    <div class="k-card k-card-vertical k-text-center">
        <div class="k-card-actions k-card-actions-stretched k-card-actions-horizontal">
            <button class="k-button k-button-flat-base k-button-flat k-button-md k-rounded-md" onclick="GoBefore();">이전</button>
            <button class="k-button k-button-flat-primary k-button-flat k-button-md k-rounded-md" onclick="GoNext();">다음</button>
        </div>
        <textarea id="question"></textarea>
        <div id="answer">
            <div id="answerText"></div>
        </div>
    </div>
</div>

